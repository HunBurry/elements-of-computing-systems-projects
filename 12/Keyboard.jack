// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    
    field boolean keyPrevDown;

    /** Initializes the keyboard. */
    function void init() {
        let keyPrevDown = -1;
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135a
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(24576);
    }

    /**                             
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var int key, mem;
        while (mem = 0) { //Waiting for the key to be pressed
            let mem = Memory.peek(24576);
        }
        let key = Memory.peek(24576); //take snapshot of the key being pressed
        while (~(mem = 0)) { //Waiting for the key to be released
            let mem = Memory.peek(24576);
        }
        do Output.printChar(key);
        return key;
    }

    /**                             
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */

    function String readLine(String message) {
        var String str;
        var int key;
        let key = Memory.peek(24576);
        while (~(key = 128)) {
            let key = Memory.peek(24576);
            if(Keyboard.keyDown()) {
                if(key = 129){
                    do str.eraseLastChar();
                } else {
                    do str.appendChar(key);
                }
            }
        }
        return str;
    }   

    function boolean keyDown() {
        var boolean keyZero;
        if(~(Memory.peek(24576) = 0) & keyPrevDown = 0) {
            let keyPrevDown = -1;
            return -1;
        }
        if(Memory.peek(24576) = 0) {
            let keyPrevDown = 0;
        }
        return false;
    }

    /**                             
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    //TODO: This
    function int readInt(String message) {
        var int key;
        let key = Memory.peek(24576);
        var boolean notPressed, inNumber, backspace;
        let notPressed = 
        while (key = 0 || (key >= 48 && key <= 57) || key = 129) {
            let key = Memory.peek(24576);
            if(keyDown()) {
                if(Memory.peek(24576) = 129){
                    do str.eraseLastChar();
                } else {
                    do str.appendChar(Memory.peek(24576));
                }
            }
        }
        return key;
    }
}
