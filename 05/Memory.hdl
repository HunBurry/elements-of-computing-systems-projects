// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
///The code for the Demux. Splits the address into various parts to be used for storage. 
Not(in=address[14], out=notN);
And(a=notN, b=load, out=ram);
And(a=address[14], b=load, out=screen);

///Creates the location addresses that can be used throughout the project. Takes in the input and uses it to store. Keyboard sends out its single bit output. 
RAM16K(in=in, load=ram, address=address[0..13], out=ram);
Screen(in=in, load=screen, address=address[0..12], out=screen);
Keyboard(out=outKeyboard);

///Determines where to store the various values that are given to it (RAM, Screen, or Keyboard sections of memory). 
Mux16(a=ram, b=outCombined, sel=address[14], out=out);
Mux16(a=screen, b=outKeyboard, sel=address[13], out=outCombined);
}
